name: Lint

on:
  push:
    branches: [main, Errors, Development, release/v1.0.0]
  pull_request:
    branches: [main, Errors, Development, release/v1.0.0]

jobs:
  eslint:
    name: ESLint & SAST Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies & security plugins
        run: |
          npm ci
          npm install --legacy-peer-deps eslint-plugin-security@latest @babel/eslint-parser@latest --save-dev
          npm install @babel/preset-react@latest --save-dev
          npx update-browserslist-db@latest

      - name: Configure ESLint with security rules
        run: |
          echo '{
            "parser": "@babel/eslint-parser",
            "parserOptions": {
              "ecmaVersion": 2021,
              "sourceType": "module",
              "ecmaFeatures": { "jsx": true },
              "requireConfigFile": false,
              "babelOptions": { "presets": ["@babel/preset-react"] }
            },
            "env": {
              "browser": true,
              "es2021": true,
              "jest": true
            },
            "plugins": ["security"],
            "rules": {
              "security/detect-object-injection": ["error", {
                "exceptionPatterns": ["^GrammarCorrection\\."]
              }],
              "security/detect-non-literal-require": "error",
              "security/detect-possible-timing-attacks": "error"
            },
            "overrides": [
              {
                "files": ["**/*.test.js", "**/*.spec.js"],
                "rules": {
                  "security/detect-object-injection": "off"
                }
              }
            ]
          }' > .eslintrc.json

      - name: Run ESLint with injection rule disabled
        run: |
          npx eslint src/ --quiet --rule 'security/detect-object-injection: off' || true

      - name: Run specific security checks
        run: |
          npx eslint src/ \
            --rule 'security/detect-non-literal-require: error' \
            --rule 'security/detect-possible-timing-attacks: error'

      # Generate ESLint JSON report
      - name: Run ESLint JSON Report
        continue-on-error: true
        run: |
          npx eslint src/ -f json -o eslint-report.json || true

      # Upload ESLint report as artifact
      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: eslint-report
          path: eslint-report.json
