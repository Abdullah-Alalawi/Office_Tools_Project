name: Security Scans

on:
  push:
    branches: [main, Errors, Development, release/v1.0.0]
  pull_request:
    branches: [main, Errors, Development, release/v1.0.0]
  schedule:
    - cron: '0 0 * * 1'  # Weekly scans

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: OWASP Dependency Scan
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Office_Tools_Kit'
          format: 'ALL'
          failOnCVSS: 7
          skip: '**/__tests__/**,**/cypress/**,**/node_modules/**'
          scanPath: 'src/'
          outputDirectory: './reports'

      - name: Upload OWASP scan reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-reports
          path: reports/

      - name: Generate npm audit report
        run: |
          npm install
          npm audit --json > npm-audit-report.json || echo '{"error": "npm audit failed"}' > npm-audit-report.json

      - name: Upload npm audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json

      - name: Check React DevContainer Features
        run: |
          mkdir -p reports
          if [ -f .devcontainer/devcontainer.json ]; then
            jq -r '.features | to_entries[] | "\(.key): \(.value.version)"' .devcontainer/devcontainer.json \
              > reports/devcontainer-features.txt || echo "No features found" > reports/devcontainer-features.txt
          else
            echo "No devcontainer.json found" > reports/devcontainer-features.txt
          fi

      - name: Upload DevContainer features list
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: devcontainer-features
          path: reports/devcontainer-features.txt

  secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          extra-args: '--no-git --report-format json --report-path reports/gitleaks-report.json'

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: reports/gitleaks-report.json

      - name: Check Env Variables
        run: |
          mkdir -p reports
          grep -r 'REACT_APP_' src/ > reports/react-env-vars.txt  || echo "No React env variables found" > reports/react-env-vars.txt
          grep -r 'process.env' src/ >> reports/react-env-vars.txt || true

      - name: Upload env-var check
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: env-var-check
          path: reports/react-env-vars.txt

  codespaces:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate DevContainer Config
        run: |
          mkdir -p reports
          {
            echo "=== DevContainer Security Checks ==="
            if [ -f .devcontainer/devcontainer.json ]; then
              jq -e '.containerUser != "root"' .devcontainer/devcontainer.json && echo "containerUser OK" || echo "containerUser WARNING: Using root"
              jq -e '.remoteUser != "root"' .devcontainer/devcontainer.json && echo "remoteUser OK" || echo "remoteUser WARNING: Using root"
              jq -e '.postCreateCommand | contains("sudo") | not' .devcontainer/devcontainer.json && echo "no sudo in postCreate" || echo "WARNING: sudo found in postCreate"
              jq -e '.customizations.vscode.settings["security.workspace.trust.enabled"] == true' .devcontainer/devcontainer.json && echo "workspace.trust enabled" || echo "WARNING: workspace.trust not enabled"
            else
              echo "No devcontainer.json found"
            fi
          } > reports/codespaces-check.log

      - name: Verify React Ports
        run: |
          {
            echo "=== Forwarded Ports ==="
            if [ -f .devcontainer/devcontainer.json ]; then
              jq '.forwardPorts' .devcontainer/devcontainer.json || echo "No forwarded ports configured"
            else
              echo "No devcontainer.json found"
            fi
          } >> reports/codespaces-check.log

      - name: Upload Codespaces hardening log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codespaces-check-log
          path: reports/codespaces-check.log
