name: Deploy to Render

on:
  push:
    branches: [main, release/v1.0.0]
  pull_request:
    branches: [main, release/v1.0.0]  
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ contains(github.ref, 'release/') && 'production' || 'staging' }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install and build
        run: |
          npm ci
          npm run build
        env:
          CI: false

      - name: Deploy to Render via API
        id: deploy
        run: |
          # Determine service ID based on branch
          if [[ "${{ github.ref }}" == *"release/"* ]]; then
            SERVICE_ID="${{ secrets.RENDER_PRODUCTION_SERVICE_ID }}"
          else
            SERVICE_ID="${{ secrets.RENDER_STAGING_SERVICE_ID }}"
          fi

          # Create deployment
          response=$(curl -s -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "clearCache": "do_not_clear",
              "environmentVariables": {
                "REACT_APP_DEEPSEEK_API_KEY": "${{ secrets.REACT_APP_DEEPSEEK_API_KEY }}",
                "REACT_APP_GPT_API_KEY": "${{ secrets.REACT_APP_GPT_API_KEY }}",
                "REACT_APP_AWS_KEY_ID": "${{ secrets.REACT_APP_AWS_KEY_ID }}",
                "REACT_APP_AWS_ACCESS_KEY": "${{ secrets.REACT_APP_AWS_ACCESS_KEY }}",
                "REACT_APP_AWS_REGION": "${{ secrets.REACT_APP_AWS_REGION }}",
                "REACT_APP_LANGUAGETOOL_API_URL": "${{ secrets.REACT_APP_LANGUAGETOOL_API_URL }}",
                "NODE_ENV": "${{ contains(github.ref, 'release/') && 'production' || 'staging' }}"
              }
            }' \
            "https://api.render.com/v1/services/$SERVICE_ID/deploys")

          # Extract deployment URL
          deploy_url=$(echo "$response" | jq -r '.deploy.url')
          echo "render-url=$deploy_url" >> $GITHUB_OUTPUT
          
          echo "Deployment triggered: $deploy_url"
        env:
          CI: false
