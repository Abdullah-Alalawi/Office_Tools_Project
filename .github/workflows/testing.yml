name: Test

on:
  push:
    branches: [main, Errors, Development, release/v1.0.0]
  pull_request:
    branches: [main, Errors, Development, release/v1.0.0]

jobs:
  unit-tests:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev jest-junit

      - name: Run unit tests with coverage
        run: |
          mkdir -p test-results
          npm test -- --watchAll=false \
                     --coverage \
                     --passWithNoTests \
                     --reporters=default \
                     --reporters=jest-junit \
                     --outputFile=test-results/junit.xml
        env:
          CI: true

      - name: Verify test artifacts
        run: |
          # Create coverage directory if it doesn't exist
          mkdir -p coverage
          # Create empty reports if tests failed
          if [ ! -f "test-results/junit.xml" ]; then
            echo '<testsuites/>' > test-results/junit.xml
          fi
          if [ ! -d "coverage" ]; then
            mkdir -p coverage
            echo '{}' > coverage/coverage-final.json
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/junit.xml
        if: always()

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
        if: always()

      - name: Print test summary
        run: |
          echo "=== Test Summary ==="
          if [ -f "test-results/junit.xml" ]; then
            echo "JUnit report exists"
          else
            echo "No JUnit report generated"
          fi
          if [ -d "coverage" ]; then
            echo "Coverage report exists"
          else
            echo "No coverage report generated"
          fi
